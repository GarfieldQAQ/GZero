<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/function.h">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/function.h" />
              <option name="originalContent" value="//&#10;// Created by Cyber on 2025/10/23.&#10;//&#10;&#10;#ifndef FUNCTION_H&#10;#define FUNCTION_H&#10;&#10;#include &lt;vector&gt;&#10;#include &lt;cmath&gt;&#10;&#10;class function{&#10;private:&#10;    float input;&#10;    float output;&#10;&#10;public:&#10;    function(float input){&#10;        function::input = input;&#10;        function::forward();&#10;    }&#10;&#10;    virtual float forward(){&#10;        return 0;&#10;    }&#10;&#10;    void setInput(float input);&#10;    float getInput();&#10;    float returnOutput();&#10;    void updateOutput(float result);&#10;};&#10;&#10;class square : public function {&#10;public:&#10;    using function::function;&#10;    float forward() override {&#10;        float in = getInput();&#10;        float r = in * in; // avoid pow for simple square (keeps float precision)&#10;        return r;&#10;    }&#10;};&#10;#endif //FUNCTION_H&#10;" />
              <option name="updatedContent" value="//&#10;// Created by Cyber on 2025/10/23.&#10;//&#10;&#10;#ifndef FUNCTION_H&#10;#define FUNCTION_H&#10;&#10;#include &lt;vector&gt;&#10;#include &lt;cmath&gt;&#10;&#10;class function{&#10;private:&#10;    float input;&#10;    float output;&#10;&#10;public:&#10;    function(float input){&#10;        function::input = input;&#10;        function::forward();&#10;    }&#10;&#10;    virtual float forward(){&#10;        return 0;&#10;    }&#10;&#10;    void setInput(float input);&#10;    float getInput();&#10;    float returnOutput();&#10;    void updateOutput(float result);&#10;};&#10;&#10;class square : public function {&#10;public:&#10;    using function::function;&#10;    float forward() override {&#10;        float in = getInput();&#10;        float r = in * in; // avoid pow for simple square (keeps float precision)&#10;        return r;&#10;    }&#10;};&#10;#endif //FUNCTION_H" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>